{"version":3,"sources":["context/context.tsx","utils/firebase.tsx","components/SignOut.tsx","components/Header.tsx","components/ChatRoomButtons.tsx","components/ChatMessage.tsx","components/Spinner.tsx","components/ChatBody.tsx","components/CreateRoom.tsx","components/JoinRoom.tsx","components/ChatRoom.tsx","components/SignIn.tsx","components/Chat.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ChatContext","createContext","useChatroom","useContext","ChatProvider","children","useState","room","setRoom","Provider","value","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignOut","history","useHistory","useAuthState","style","display","flexDirection","className","onClick","push","currentUser","signOut","Header","name","ChatRoomButtons","ChatMessage","message","text","uid","photoURL","messageClass","src","alt","Spinner","ChatBody","chatroomId","useParams","chatroomQuery","collection","where","messagesRef","messagesQuery","orderBy","limit","useCollectionData","idField","transform","msg","messages","useCollectionDataOnce","chatroom","loading","formValue","setFormValue","dummyRef","useRef","onSubmiHandler","e","a","preventDefault","length","add","createdAt","FieldValue","serverTimestamp","useEffect","current","scrollIntoView","behavior","map","id","ref","onSubmit","onChange","target","type","CreateRoom","chatroomRef","roomName","setRoomName","uuid_v4","placeholder","JoinRoom","roomId","setRoomId","get","snapshot","docs","doc","data","ChatRoom","exact","path","SignIn","provider","GoogleAuthProvider","signInWithPopup","Chat","user","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1213df5.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { createContext, FC, useContext } from \"react\";\r\nimport { ChatRoom } from \"../@types\";\r\n\r\ninterface ContextValues {\r\n  room: ChatRoom | null;\r\n  setRoom: Function;\r\n}\r\n\r\nconst ChatContext = createContext<Partial<ContextValues>>({});\r\n\r\nexport const useChatroom = () => {\r\n  const context = useContext(ChatContext);\r\n  return context;\r\n};\r\n\r\nexport const ChatProvider: FC<{}> = ({ children }) => {\r\n  const [room, setRoom] = useState(null);\r\n  return (\r\n    <ChatContext.Provider value={{ room, setRoom }}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDMaoIYROv6pMp-kuGG1-hZ-VQRUgF7iq4\",\r\n  authDomain: \"chatroom-904d0.firebaseapp.com\",\r\n  projectId: \"chatroom-904d0\",\r\n  storageBucket: \"chatroom-904d0.appspot.com\",\r\n  messagingSenderId: \"620706504456\",\r\n  appId: \"1:620706504456:web:f10f9366e67df2578156bd\",\r\n  measurementId: \"G-RS7F424HR8\",\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n","import { FC } from \"react\";\r\nimport { auth } from \"../utils/firebase\";\r\nimport SignOutIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useChatroom } from \"../context/context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SignOut: FC = () => {\r\n  const { room, setRoom } = useChatroom();\r\n  const history = useHistory();\r\n\r\n  const signOutHandler = () => {\r\n    auth.signOut();\r\n  };\r\n\r\n  const quitRoomHandler = () => {\r\n    if (setRoom) {\r\n      setRoom(null);\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const [user] = useAuthState(auth);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n      {room && (\r\n        <button className=\"signout-button\" onClick={quitRoomHandler}>\r\n          Quit Room\r\n        </button>\r\n      )}\r\n      {auth.currentUser && (\r\n        <button className=\"signout-button\" onClick={signOutHandler}>\r\n          <SignOutIcon /> Sign Out\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignOut;\r\n","import { FC } from \"react\";\r\nimport { useChatroom } from \"../context/context\";\r\nimport SignOut from \"./SignOut\";\r\n\r\nconst Header: FC = () => {\r\n  const { room } = useChatroom();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>ðŸ’¬ {room && room.name}</h1>\r\n      <SignOut />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { FC } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatRoomButtons: FC = () => {\r\n  const history = useHistory();\r\n  const joinButtonHandler = () => {\r\n    history.push(\"/join\");\r\n  };\r\n\r\n  const createButtonHandler = () => {\r\n    history.push(\"/create\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatroom-buttons\">\r\n      <button onClick={joinButtonHandler}>Join</button>\r\n      <button onClick={createButtonHandler}>Create</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoomButtons;\r\n","import { FC } from \"react\";\r\nimport { Message } from \"../@types\";\r\nimport { auth } from \"../utils/firebase\";\r\n\r\ninterface ChatMessageProps {\r\n  message: Message;\r\n}\r\n\r\nconst ChatMessage: FC<ChatMessageProps> = ({ message }) => {\r\n  const { text, uid, photoURL } = message;\r\n  const messageClass = uid === auth.currentUser?.uid ? \"sent\" : \"received\";\r\n  return (\r\n    <div className={`message ${messageClass}`}>\r\n      <img src={photoURL} alt=\"User Profile Picture\" />\r\n      <p className=\"chat-text\">{text} </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMessage;\r\n","import { FC } from \"react\";\r\nimport \"./spinner.css\";\r\n\r\nconst Spinner: FC = () => {\r\n  return (\r\n    <div className=\"chatroom-buttons\">\r\n      <div className=\"loader\">Loading...</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import { useRef, useState } from \"react\";\r\nimport { FC } from \"react\";\r\nimport {\r\n  useCollectionData,\r\n  useCollectionDataOnce,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport { ChatRoom, Message } from \"../@types\";\r\nimport { auth, firestore } from \"../utils/firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport { useEffect } from \"react\";\r\nimport { RouteComponentProps, useHistory, useParams } from \"react-router-dom\";\r\nimport Spinner from \"./Spinner\";\r\nimport ChatRoomButtons from \"./ChatRoomButtons\";\r\nimport { useChatroom } from \"../context/context\";\r\n\r\ninterface ChatRoomRouteParams {\r\n  chatroomId: string;\r\n}\r\n\r\nconst ChatBody: FC = () => {\r\n  const { chatroomId } = useParams<ChatRoomRouteParams>();\r\n  const { room, setRoom } = useChatroom();\r\n  const history = useHistory();\r\n\r\n  const chatroomRef = firestore.collection(\"chatrooms\");\r\n  const chatroomQuery = chatroomRef.where(\"id\", \"==\", chatroomId);\r\n\r\n  const messagesRef = firestore.collection(\"messages\");\r\n  const messagesQuery = messagesRef\r\n    .where(\"chatroomId\", \"==\", chatroomId)\r\n    .orderBy(\"createdAt\")\r\n    .limit(50);\r\n\r\n  const [messages] = useCollectionData(messagesQuery, {\r\n    idField: \"id\",\r\n    transform: (msg) => msg as Message,\r\n  });\r\n\r\n  const [chatroom, loading] = useCollectionDataOnce(chatroomQuery, {\r\n    idField: \"id\",\r\n    transform: (room) => room as ChatRoom,\r\n  });\r\n\r\n  const [formValue, setFormValue] = useState<string>(\"\");\r\n  const dummyRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const onInputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormValue(e.target.value);\r\n  };\r\n\r\n  const onSubmiHandler = async (e: React.FormEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!formValue.length) return;\r\n\r\n    if (auth.currentUser) {\r\n      const { uid, photoURL } = auth.currentUser;\r\n\r\n      await messagesRef.add({\r\n        text: formValue,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid,\r\n        photoURL,\r\n        chatroomId,\r\n      });\r\n\r\n      setFormValue(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dummyRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (!chatroom || !chatroom.length) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chat-body\">\r\n        {messages &&\r\n          messages.map((message) => (\r\n            <ChatMessage key={message.id} message={message} />\r\n          ))}\r\n        <div ref={dummyRef}></div>\r\n      </div>\r\n      <form onSubmit={onSubmiHandler}>\r\n        <input value={formValue} onChange={onInputHandler} />\r\n        <button type=\"submit\">\r\n          <SendIcon />\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatBody;\r\n","import { useState } from \"react\";\r\nimport { FC } from \"react\";\r\nimport { auth, firestore } from \"../utils/firebase\";\r\nimport firebase from \"firebase/app\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useChatroom } from \"../context/context\";\r\n\r\nconst CreateRoom: FC = () => {\r\n  const chatroomRef = firestore.collection(\"chatrooms\");\r\n  const { setRoom } = useChatroom();\r\n  const [roomName, setRoomName] = useState<string>(\"\");\r\n  const history = useHistory();\r\n\r\n  const onInputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRoomName(e.target.value);\r\n  };\r\n\r\n  const onSubmiHandler = async (e: React.FormEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!roomName.length) return;\r\n\r\n    if (auth.currentUser) {\r\n      const id = uuid_v4();\r\n\r\n      const room = await chatroomRef.add({\r\n        name: roomName,\r\n        uid: auth.currentUser.uid,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        id,\r\n      });\r\n\r\n      setRoom &&\r\n        setRoom({\r\n          id,\r\n          name: roomName,\r\n        });\r\n\r\n      history.push(`./${id}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatroom-buttons\">\r\n      <form onSubmit={onSubmiHandler}>\r\n        <input\r\n          placeholder=\"Room Name\"\r\n          value={roomName}\r\n          onChange={onInputHandler}\r\n        />\r\n        <button type=\"submit\">\r\n          <SendIcon />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateRoom;\r\n","import { useState } from \"react\";\r\nimport { FC } from \"react\";\r\nimport { firestore } from \"../utils/firebase\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useChatroom } from \"../context/context\";\r\n\r\nconst JoinRoom: FC = () => {\r\n  const chatroomRef = firestore.collection(\"chatrooms\");\r\n  const { setRoom } = useChatroom();\r\n  const [roomId, setRoomId] = useState<string>(\"\");\r\n  const history = useHistory();\r\n\r\n  const onInputHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRoomId(e.target.value);\r\n  };\r\n\r\n  const onSubmiHandler = async (e: React.FormEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n    const snapshot = await chatroomRef.where(\"id\", \"==\", roomId).get();\r\n    const chatroom = snapshot.docs.map((doc) => doc.data());\r\n\r\n    if (!chatroom || !chatroom.length) {\r\n      setRoomId(\"No room with that id exists\");\r\n      return;\r\n    }\r\n\r\n    const { id } = chatroom[0];\r\n\r\n    setRoom && setRoom(chatroom[0]);\r\n    history.push(`/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatroom-buttons\">\r\n      <form onSubmit={onSubmiHandler}>\r\n        <input placeholder=\"Room ID\" value={roomId} onChange={onInputHandler} />\r\n        <button type=\"submit\">\r\n          <SendIcon />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinRoom;\r\n","import { useRef, useState } from \"react\";\r\nimport { FC } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport ChatRoomButtons from \"./ChatRoomButtons\";\r\nimport ChatBody from \"./ChatBody\";\r\nimport CreateRoom from \"./CreateRoom\";\r\nimport JoinRoom from \"./JoinRoom\";\r\n\r\nconst ChatRoom: FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <ChatRoomButtons />\r\n      </Route>\r\n      <Route exact path=\"/create\">\r\n        <CreateRoom />\r\n      </Route>\r\n      <Route exact path=\"/join\">\r\n        <JoinRoom />\r\n      </Route>\r\n      <Route path=\"/:chatroomId\">\r\n        <ChatBody />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n","import { FC } from \"react\";\r\nimport firebase, { auth } from \"../utils/firebase\";\r\n\r\nconst SignIn: FC = () => {\r\n  const signInHandler = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatroom-buttons\">\r\n      <button className=\"signin-button\" onClick={signInHandler}>\r\n        Sign in with Google\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import { FC } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"../utils/firebase\";\r\nimport ChatRoom from \"./ChatRoom\";\r\nimport SignIn from \"./SignIn\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst Chat: FC = () => {\r\n  const [user, loading] = useAuthState(auth);\r\n  if (loading) {\r\n    return (\r\n      <div className=\"chat\">\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  }\r\n  return <div className=\"chat\">{user ? <ChatRoom /> : <SignIn />}</div>;\r\n};\r\n\r\nexport default Chat;\r\n","import \"./App.css\";\n\nimport Header from \"./components/Header\";\nimport Chat from \"./components/Chat\";\nimport { ChatProvider } from \"./context/context\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ChatProvider>\n        <div className=\"App\">\n          <Header />\n          <Chat />\n        </div>\n      </ChatProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}